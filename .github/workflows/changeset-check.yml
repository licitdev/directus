name: Changeset Check

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read
  pull-requests: read
  issues: read

jobs:
  changeset-check:
    name: Changeset Check
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' && github.event.issue.pull_request)
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Changeset Requirement
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request?.number || context.payload.issue?.number;

            async function fetchPage(filesCursor, commentsCursor) {
              const query = `
                query($owner:String!,$repo:String!,$pr:Int!,$filesCursor:String,$commentsCursor:String) {
                  repository(owner:$owner,name:$repo) {
                    pullRequest(number:$pr) {
                      files(first:100, after:$filesCursor) {
                        pageInfo { hasNextPage endCursor }
                        nodes { path changeType }
                      }
                      comments(first:100, after:$commentsCursor) {
                        pageInfo { hasNextPage endCursor }
                        nodes { author { login } body isMinimized }
                      }
                    }
                  }
                }
              `;

              const vars = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pr: prNumber,
                filesCursor,
                commentsCursor,
              };

              return await github.graphql(query, vars);
            }

            let filesCursor = null;
            let commentsCursor = null;
            let shouldContinue;

            do {
              const result = await fetchPage(filesCursor, commentsCursor);
              const pr = result.repository.pullRequest;

              if (
                pr.files.nodes.some(
                  (f) =>
                    f.path.startsWith('.changeset/') &&
                    f.path.endsWith('.md') &&
                    (f.changeType === 'ADDED' || f.changeType === 'MODIFIED'),
                )
              ) {
                core.info('✅ Found changeset file');
                return;
              }

              const botComment = pr.comments.nodes.find((c) => c.author.login === 'changeset-bot');

              if (!botComment) {
                core.info('✅ No changeset-bot comment found');
                return;
              } else if (botComment.isMinimized) {
                core.info('✅ changeset-bot comment is hidden');
                return;
              } else if (!botComment.body.includes('No Changeset found')) {
                core.info('✅ changeset-bot comment does not indicate missing changeset');
                return;
              }

              const nextFilesCursor = pr.files.pageInfo.hasNextPage
                ? pr.files.pageInfo.endCursor
                : null;

              const nextCommentsCursor = pr.comments.pageInfo.hasNextPage
                ? pr.comments.pageInfo.endCursor
                : null;

              shouldContinue = Boolean(nextFilesCursor || nextCommentsCursor);
              filesCursor = nextFilesCursor;
              commentsCursor = nextCommentsCursor;
            } while (shouldContinue);

            core.setFailed('❌ Missing changeset - add changeset or hide changeset-bot comment');
